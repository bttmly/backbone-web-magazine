// Generated by CoffeeScript 1.6.3
(function() {
  $(function() {
    return App.router = new (Backbone.Router.extend({
      routes: {
        "": "featured",
        "article/:id": "singleArticle",
        "category/:name": "categoryPage",
        "author/:name": "authorPage"
      },
      singleArticle: function(id) {
        var articleModel, articleView,
          _this = this;
        console.log(articleModel);
        id = parseInt(id, 10);
        articleModel = new App.Models.ArticleModel(_(App.data.articles).findWhere({
          uid: id
        }));
        articleModel.set({
          "empty": true,
          "truncate": false
        });
        articleView = new App.Views.SingleArticleView({
          model: articleModel
        });
        this.banners(articleModel.get("category")).show();
        this.helpers.setTab(articleModel.get("category"));
        return articleView.fadeRender(function() {
          _this.helpers.scrollTop(".main-content");
          return _this.helpers.setPageType("article");
        });
      },
      categoryPage: function(name) {
        var articleCollection, articleView,
          _this = this;
        articleCollection = new App.Collections.ArticlesCollection(_(App.data.articles).where({
          category: name
        }));
        articleCollection.invoke("set", {
          "empty": false,
          "truncate": 250
        });
        articleView = new App.Views.CategoryArticlesView({
          collection: articleCollection,
          category: name
        });
        this.banners(name).show();
        this.helpers.setTab(name);
        return articleView.fadeRender(function() {
          var articleModel;
          _this.helpers.scrollTop("html");
          _this.helpers.setPageType("category");
          articleModel = null;
          return articleView = null;
        });
      },
      featured: function() {
        var articleCollection, articleView,
          _this = this;
        articleCollection = new App.Collections.ArticlesCollection(_(App.data.articles).where({
          featured: true
        }));
        articleCollection.invoke("set", {
          "empty": false,
          "truncate": 250
        });
        articleView = new App.Views.CategoryArticlesView({
          collection: articleCollection,
          category: "featured"
        });
        this.banners("featured").show();
        this.helpers.setTab("featured");
        return articleView.fadeRender(function() {
          _this.helpers.scrollTop("html");
          return _this.helpers.setPageType("category");
        });
      },
      renderBanner: function(category) {
        var bannerModel, bannerView;
        bannerModel = new App.Models.BannerModel(_(App.data.banners).findWhere({
          category: category
        }));
        bannerView = new App.Views.CategoryBannerView({
          model: bannerModel,
          category: category
        });
        return bannerView.render();
      },
      banners: function(category) {
        console.log(category);
        return _(App.banners).findWhere({
          category: category
        });
      },
      helpers: {
        setTab: function(name) {
          $(".nav-links li").removeClass("selected-section");
          return $(".nav-links .js-nav-" + name).addClass("selected-section");
        },
        scrollTop: function(selector) {
          if (selector == null) {
            selector = ".category-banner";
          }
          return $("body").animate({
            scrollTop: $(selector).offset().top
          }, 400);
        },
        setPageType: function(value) {
          return $("body").attr("data-page-type", value);
        }
      },
      start: function() {
        Backbone.history.start({
          pushState: true,
          root: "/backbone-web-magazine/"
        });
        return $(document).on('click', 'a:not([data-bypass])', function(event) {
          var href;
          event.preventDefault();
          href = $(this).attr("href");
          return App.router.navigate(href, true);
        });
      }
    }));
  });

}).call(this);
