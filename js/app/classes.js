// Generated by CoffeeScript 1.6.3
var ArticleModel, ArticleView, ArticlesCollection, BannerModel, BaseView, CategoryArticlesView, CategoryBannerView, DropdownView, SingleArticleView, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

BaseView = (function(_super) {
  __extends(BaseView, _super);

  function BaseView() {
    _ref = BaseView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  BaseView.prototype.initialize = function(options) {
    var key, _i, _len, _ref1,
      _this = this;
    _ref1 = Object.keys(options);
    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
      key = _ref1[_i];
      this[key] = options[key];
    }
    this.vent = App.vent;
    return this.fadeRender = function(callback) {
      var fadeDuration, view;
      view = _this;
      fadeDuration = 200;
      if (_this.$el.is(":hidden")) {
        _this.render();
        return _this.$el.fadeIn(fadeDuration, function() {
          if ((callback != null) && _.isFunction(callback)) {
            return callback();
          }
        });
      } else if (App.util.isEmpty(_this.$el)) {
        _this.$el.hide();
        return _this.$el.fadeIn(fadeDuration, function() {
          if ((callback != null) && _.isFunction(callback)) {
            callback();
            return _this.render();
          }
        });
      } else {
        return _this.$el.fadeOut(fadeDuration, function() {
          view.render();
          if ((callback != null) && _.isFunction(callback)) {
            callback();
          }
          return _this.$el.fadeIn(fadeDuration);
        });
      }
    };
  };

  BaseView.prototype.close = function() {
    this.unbind();
    this.model.unbind('change', this.render, this);
    this.options.parent.unbind('close:all', this.close, this);
    this.remove();
    delete this.$el;
    return delete this.el;
  };

  return BaseView;

})(Backbone.View);

ArticleView = (function(_super) {
  __extends(ArticleView, _super);

  function ArticleView() {
    _ref1 = ArticleView.__super__.constructor.apply(this, arguments);
    return _ref1;
  }

  ArticleView.prototype.initialize = function(options) {
    return ArticleView.__super__.initialize.call(this, options);
  };

  return ArticleView;

})(BaseView);

/**/


/**/


/*    MODELS*/


/**/


/**/


App.Models = {
  ArticleModel: ArticleModel = (function(_super) {
    __extends(ArticleModel, _super);

    function ArticleModel() {
      _ref2 = ArticleModel.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    return ArticleModel;

  })(Backbone.Model),
  BannerModel: BannerModel = (function(_super) {
    __extends(BannerModel, _super);

    function BannerModel() {
      _ref3 = BannerModel.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    return BannerModel;

  })(Backbone.Model)
};

/**/


/**/


/* COLLECTIONS*/


/**/


/**/


App.Collections = {
  ArticlesCollection: ArticlesCollection = (function(_super) {
    __extends(ArticlesCollection, _super);

    function ArticlesCollection() {
      _ref4 = ArticlesCollection.__super__.constructor.apply(this, arguments);
      return _ref4;
    }

    ArticlesCollection.prototype.model = App.Models.ArticleModel;

    ArticlesCollection.prototype.comparator = function(m) {
      if (!m.get("date")) {
        m.set("date", App.util.randomDate());
      }
      return -m.get('date').getTime();
    };

    return ArticlesCollection;

  })(Backbone.Collection)
};

/**/


/**/


/*    VIEWS*/


/**/


/**/


App.Views = {
  DropdownView: DropdownView = (function(_super) {
    __extends(DropdownView, _super);

    function DropdownView() {
      _ref5 = DropdownView.__super__.constructor.apply(this, arguments);
      return _ref5;
    }

    DropdownView.prototype.el = ".nav-link-dropdown";

    DropdownView.prototype.template = App.templates.dropdown;

    DropdownView.prototype.initialize = function(options) {
      this.setElement(".nav-link-dropdown-" + options.category);
      this.category = options.category;
      return this.vent = App.vent;
    };

    DropdownView.prototype.render = function() {
      var data;
      data = {
        articles: this.collection.toJSON(),
        category: this.category
      };
      return this.$el.html(this.template(data));
    };

    return DropdownView;

  })(Backbone.View),
  CategoryArticlesView: CategoryArticlesView = (function(_super) {
    __extends(CategoryArticlesView, _super);

    function CategoryArticlesView() {
      this.renderOne = __bind(this.renderOne, this);
      this.render = __bind(this.render, this);
      _ref6 = CategoryArticlesView.__super__.constructor.apply(this, arguments);
      return _ref6;
    }

    CategoryArticlesView.prototype.el = ".main-content";

    CategoryArticlesView.prototype.template = App.templates.singleArticle;

    CategoryArticlesView.prototype.initialize = function(options) {
      return CategoryArticlesView.__super__.initialize.call(this, options);
    };

    CategoryArticlesView.prototype.render = function() {
      var article, _i, _len, _ref7, _results;
      this.$el.empty();
      _ref7 = this.collection.models;
      _results = [];
      for (_i = 0, _len = _ref7.length; _i < _len; _i++) {
        article = _ref7[_i];
        _results.push(this.renderOne(article));
      }
      return _results;
    };

    CategoryArticlesView.prototype.renderOne = function(model) {
      var view;
      return view = new App.Views.SingleArticleView({
        model: model
      }).render();
    };

    return CategoryArticlesView;

  })(BaseView),
  SingleArticleView: SingleArticleView = (function(_super) {
    __extends(SingleArticleView, _super);

    function SingleArticleView() {
      this.render = __bind(this.render, this);
      _ref7 = SingleArticleView.__super__.constructor.apply(this, arguments);
      return _ref7;
    }

    SingleArticleView.prototype.el = ".main-content";

    SingleArticleView.prototype.template = App.templates.singleArticle;

    SingleArticleView.prototype.className = "single-article";

    SingleArticleView.prototype.initialize = function(options) {
      return SingleArticleView.__super__.initialize.call(this, options);
    };

    SingleArticleView.prototype.render = function() {
      if (this.model.get("empty")) {
        this.$el.empty();
      }
      return this.$el.append(this.template({
        article: this.model.toJSON(),
        shorten: this.model.get("truncate")
      }));
    };

    return SingleArticleView;

  })(BaseView),
  CategoryBannerView: CategoryBannerView = (function(_super) {
    __extends(CategoryBannerView, _super);

    function CategoryBannerView() {
      this.show = __bind(this.show, this);
      this.render = __bind(this.render, this);
      _ref8 = CategoryBannerView.__super__.constructor.apply(this, arguments);
      return _ref8;
    }

    CategoryBannerView.prototype.el = ".category-hero";

    CategoryBannerView.prototype.template = App.templates.categoryBanner;

    CategoryBannerView.prototype.initialize = function(options) {
      return CategoryBannerView.__super__.initialize.call(this, options);
    };

    CategoryBannerView.prototype.render = function() {
      return this.$el.append(this.template(this.model.toJSON()));
    };

    CategoryBannerView.prototype.show = function() {
      console.log(this.category);
      this.$el.find(".category-banner").css({
        opacity: 0,
        zIndex: -1
      });
      return this.$el.find(".category-banner-" + this.category).css({
        opacity: 1,
        zIndex: 1
      });
    };

    return CategoryBannerView;

  })(BaseView)
};
