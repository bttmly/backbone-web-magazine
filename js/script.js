// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

$(function() {
  var ArticleModel, ArticlesCollection, BannerModel, CategoryArticlesView, CategoryBannerView, DropdownView, SingleArticleView, article, articles, banner, banners, categories, category, i, key, prefetchImage, randomArrayItem, randomDate, templates, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7;
  Backbone.$ = jQuery;
  window.App = {};
  randomDate = function(start, end) {
    if (start == null) {
      start = new Date(new Date() - 12096e5);
    }
    if (end == null) {
      end = new Date();
    }
    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));
  };
  randomArrayItem = function(arr) {
    return arr[Math.floor(Math.random() * arr.length)];
  };
  prefetchImage = function(src) {
    var img;
    img = new Image();
    return img.src = src;
  };
  App.banners = banners = [
    {
      category: "code",
      subtitle: "Thoughts on web design and development.",
      image: "http://farm3.staticflickr.com/2326/2378867408_5d2ac25d2f_o.jpg"
    }, {
      category: "eat",
      subtitle: "Food and food culture in the Bay Area.",
      image: "http://24.media.tumblr.com/51c2cbdc21e51aabda946df85c0ffd0c/tumblr_mfkatySCWw1qdertso1_1280.jpg"
    }, {
      category: "listen",
      subtitle: "Bands, shows, album reviews and more",
      image: "http://rivalsons.com/wp_v1/wp-content/themes/rivalsons_theme/images/slide_3.jpg"
    }, {
      category: "watch",
      subtitle: "Oh, indeed.",
      image: "http://cdn.uproxx.com/wp-content/uploads/2012/07/tumblr_m796vkee2E1qmxn5so1_r1_500.gif"
    }, {
      category: "drink",
      subtitle: "No wine. Seriously, no wine.",
      image: "http://foodandwineblog.com/wp-content/uploads/2012/01/DSC_1665.jpg"
    }, {
      category: "featured",
      subtitle: "Just the hits.",
      image: "http://floridatheatre.com/assets/2chainz_2nd-run-e1350312473755.jpg"
    }
  ];
  App.articles = articles = [
    {
      image: "http://www.silveradocontractors.com/images/demolitionmain.jpg",
      title: "About the Site Redesign",
      authors: ["Nick"],
      category: "code",
      featured: true
    }, {
      image: "http://www.berkeleyside.com/wp-content/uploads/2013/06/pulling-out-plain-slice-720x529.jpg",
      title: "Best East Bay Pizza",
      authors: ["Patrick"],
      category: "eat",
      featured: true
    }, {
      image: "http://ih1.redbubble.net/image.8403495.7664/flat,550x550,075,f.jpg",
      title: "The Ins and Outs of Backbone.js",
      authors: ["Ali"],
      category: "code",
      featured: true
    }, {
      image: "http://cravedfw.files.wordpress.com/2013/07/old-fashioned.jpg",
      title: "Old Fashioned &mdash; Hold (most of) the Sugar",
      authors: ["Max"],
      category: "drink",
      featured: false
    }, {
      image: "http://theversatilegent.com/wp-content/uploads/2012/10/6040127502_e0bd694669_z.jpg",
      title: "Comparison: Bulleit Rye v. Russels Reserve Rye",
      authors: ["Dave"],
      category: "drink",
      featured: false
    }, {
      image: "http://3.bp.blogspot.com/-Mk-ntQrmpjs/Tv9SacvctZI/AAAAAAAAEOM/b5W_Mx09xPM/s1600/Michter%2527sWhiskey.jpg",
      title: "Sampling Michters Rye, Bourbon, and American Whiskey",
      authors: ["Dave", "Ali"],
      category: "drink",
      featured: false
    }, {
      image: "http://wagesofwins.com/wp-content/uploads/2013/10/Stephen-Curry-shooting.jpg",
      title: "Using D3.js For Sports Data Visualization",
      authors: ["Patrick", "Dave"],
      category: "code",
      featured: false
    }, {
      image: "http://www.eastbayexpress.com/imager/the-local-butcher-shops-roast-beef-sandwich-doesnt-disappoint/b/original/3378772/694f/food.jpg",
      title: "Review: Six Oakland Sandwich Spots",
      authors: ["Nick", "Ali", "Max"],
      category: "eat",
      featured: false
    }, {
      image: "http://home.earthlink.net/~remanski/oranges.jpg",
      title: "Fruit in Season Right Now",
      authors: ["Nick", "Ali"],
      category: "eat",
      featured: false
    }, {
      image: "http://www.cultistzine.com/wp-content/uploads/2013/02/hanni-el-khatib-456-050112.jpg",
      title: "Hanni El Khatib &mdash; <em>Head in the Dirt</em>",
      authors: ["Max", "Ali", "Patrick"],
      category: "listen",
      featured: false
    }, {
      image: "http://userserve-ak.last.fm/serve/500/69137722/Rival%2BSons%2BRivalSons_sam4854cPNG.png",
      title: "Rival Sons &mdash; <em>Head Down</em>",
      authors: ["Nick", "Max"],
      category: "listen",
      featured: false
    }, {
      image: "http://cdn.thefader.com/wp-content/uploads/2013/02/Gary_Clark_jr_620.jpg",
      title: "Gary Clark Jr. &mdash; <em>Blak and Blu</em>",
      authors: ["Nick"],
      category: "listen",
      featured: false
    }, {
      image: "http://i2.cdnds.net/13/09/618x412/ustv_justified_1.jpg",
      title: "<em>Justified</em> Starts 5th Season; Will End After 6th",
      authors: ["Ali"],
      category: "watch",
      featured: false
    }, {
      image: "http://www.trbimg.com/img-50c23b3e/turbine/bal-ron-swanson-thumbs-up-20121207/600",
      title: "<em>Parks & Rec</em> Is In Rare Company",
      authors: ["Patrick", "Max"],
      category: "watch",
      featured: false
    }, {
      image: "http://wac.450f.edgecastcdn.net/80450F/screencrush.com/files/2014/01/True-Detective-02-786710.jpg",
      title: "New Show: HBO's <em>True Detective</em>",
      authors: ["Max", "Patrick"],
      category: "watch",
      featured: false
    }
  ];
  categories = _.unique(articles.map(function(a) {
    return a.category;
  }));
  for (i = _i = 0, _len = articles.length; _i < _len; i = ++_i) {
    article = articles[i];
    article.date = randomDate();
    article.uid = i + 1;
  }
  App.templates = templates = {
    dropdown: CoffeeKup.compile(function() {
      header({
        "class": 'dropdown-header'
      }, function() {
        return p(function() {
          return "Recent Articles";
        });
      });
      div({
        "class": 'dropdown-columns'
      }, function() {
        var _j, _len1, _ref, _results;
        _ref = data.articles;
        _results = [];
        for (i = _j = 0, _len1 = _ref.length; _j < _len1; i = ++_j) {
          article = _ref[i];
          if (i > 2) {
            break;
          }
          _results.push(div({
            "class": 'dropdown-column'
          }, function() {
            var d;
            div({
              "class": 'article-snippet-image',
              'style': "background-image: url('" + article.image + "')"
            }, function() {});
            a({
              "class": 'article-link',
              href: "/article/" + article.uid
            }, function() {
              return h2({
                "class": 'snippet-title'
              }, function() {
                return article.title;
              });
            });
            if (article.authors.length) {
              p({
                "class": 'article-snippet-authors'
              }, function() {
                var author, _k, _len2, _ref1, _results1;
                text('by ');
                _ref1 = article.authors;
                _results1 = [];
                for (i = _k = 0, _len2 = _ref1.length; _k < _len2; i = ++_k) {
                  author = _ref1[i];
                  _results1.push(span({
                    "class": 'article-snippet-author'
                  }, function() {
                    if (i === article.authors.length - 1) {
                      return "<a href='author/" + author + "'>" + author + "</a>";
                    } else if (i === article.authors.length - 2) {
                      return "<a href='author/" + author + "'>" + author + "</a> and ";
                    } else {
                      return "<a href='author/" + author + "'>" + author + "</a>, ";
                    }
                  }));
                }
                return _results1;
              });
            }
            if (article.category) {
              p({
                "class": 'article-snippet-tags'
              }, function() {
                return "Filed in " + (_.str.capitalize(article.category));
              });
            }
            if (article.date) {
              d = article.date.toString().split(' ');
              return p({
                "class": 'article-snippet-date'
              }, function() {
                return "" + d[0] + " " + d[1] + " " + d[2] + " " + d[3];
              });
            }
          }));
        }
        return _results;
      });
      return footer({
        "class": 'dropdown-footer'
      }, function() {
        var url;
        url = data.category === "featured" ? "/" : "/category/" + data.category;
        return a({
          "class": 'category-link',
          href: url
        }, function() {
          return p(function() {
            text("Read More in ");
            return span({
              "class": 'dropdown-category'
            }, function() {
              return _.str.capitalize(data.category);
            });
          });
        });
      });
    }),
    singleArticle: CoffeeKup.compile(function() {
      var art;
      console.log(data);
      art = data.article;
      return article(function() {
        header({
          "class": 'article-header'
        }, function() {
          div({
            "class": 'article-info'
          }, function() {
            a({
              "class": 'article-link',
              href: "/article/" + art.uid
            }, function() {
              return h2({
                "class": 'article-title'
              }, function() {
                return art.title;
              });
            });
            p({
              "class": 'article-authors'
            }, function() {
              var author, _j, _len1, _ref, _results;
              text('by ');
              _ref = art.authors;
              _results = [];
              for (i = _j = 0, _len1 = _ref.length; _j < _len1; i = ++_j) {
                author = _ref[i];
                _results.push(span({
                  "class": 'article-snippet-author'
                }, function() {
                  if (i === art.authors.length - 1) {
                    return "<a href='author/" + author + "'>" + author + "</a>";
                  } else if (i === art.authors.length - 2) {
                    return "<a href='author/" + author + "'>" + author + "</a> and ";
                  } else {
                    return "<a href='author/" + author + "'>" + author + "</a>, ";
                  }
                }));
              }
              return _results;
            });
            return p({
              "class": 'article-date'
            }, function() {
              var d;
              d = art.date.toString().split(' ');
              return text("" + d[0] + " " + d[1] + " " + d[2] + " " + d[3]);
            });
          });
          return div({
            "class": 'article-image',
            style: "background-image: url( " + art.image + " );"
          });
        });
        section({
          "class": 'article-body'
        }, function() {
          if (data.shorten) {
            return _(art.content).truncate(200);
          } else {
            return art.content;
          }
        });
        return footer({
          "class": 'article-footer'
        }, function() {});
      });
    }),
    categoryBanner: CoffeeKup.compile(function() {
      return div({
        "class": 'category-banner',
        style: "background-image: url('" + data.image + "')"
      }, function() {
        return h2({
          "class": 'category-title'
        }, function() {
          text(_.str.capitalize(data.category));
          return span({
            "class": "category-title__subtitle"
          }, function() {
            return data.subtitle;
          });
        });
      });
    })
  };
  App.vent = _.extend({}, Backbone.Events);
  ArticleModel = (function(_super) {
    __extends(ArticleModel, _super);

    function ArticleModel() {
      _ref = ArticleModel.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return ArticleModel;

  })(Backbone.Model);
  ArticlesCollection = (function(_super) {
    __extends(ArticlesCollection, _super);

    function ArticlesCollection() {
      _ref1 = ArticlesCollection.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    ArticlesCollection.prototype.model = ArticleModel;

    ArticlesCollection.prototype.comparator = function(m) {
      if (!m.get("date")) {
        m.set("date", randomDate());
      }
      return -m.get('date').getTime();
    };

    return ArticlesCollection;

  })(Backbone.Collection);
  BannerModel = (function(_super) {
    __extends(BannerModel, _super);

    function BannerModel() {
      _ref2 = BannerModel.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    return BannerModel;

  })(Backbone.Model);
  DropdownView = (function(_super) {
    __extends(DropdownView, _super);

    function DropdownView() {
      _ref3 = DropdownView.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    DropdownView.prototype.el = ".nav-link-dropdown";

    DropdownView.prototype.template = templates.dropdown;

    DropdownView.prototype.initialize = function(options) {
      this.setElement(".nav-link-dropdown-" + options.category);
      this.category = options.category;
      return this.vent = App.vent;
    };

    DropdownView.prototype.render = function() {
      var data;
      data = {
        articles: this.collection.toJSON(),
        category: this.category
      };
      return this.$el.html(this.template(data));
    };

    return DropdownView;

  })(Backbone.View);
  CategoryArticlesView = (function(_super) {
    __extends(CategoryArticlesView, _super);

    function CategoryArticlesView() {
      _ref4 = CategoryArticlesView.__super__.constructor.apply(this, arguments);
      return _ref4;
    }

    CategoryArticlesView.prototype.el = ".main-content";

    CategoryArticlesView.prototype.template = templates.singleArticle;

    CategoryArticlesView.prototype.initialize = function(options) {
      _.bindAll(this, "render");
      this.bind("switchToCategory", this.render);
      this.category = options.category;
      this.vent = App.vent;
      return this.vent.bind("switchToCategory:" + options.category, this.render);
    };

    CategoryArticlesView.prototype.render = function() {
      var _j, _len1, _ref5, _results;
      this.$el.empty();
      _ref5 = this.collection.models;
      _results = [];
      for (_j = 0, _len1 = _ref5.length; _j < _len1; _j++) {
        article = _ref5[_j];
        _results.push(this.renderOne(article));
      }
      return _results;
    };

    CategoryArticlesView.prototype.renderOne = function(model) {
      var view;
      return view = new SingleArticleView({
        model: model,
        parent: this
      }).render(true);
    };

    return CategoryArticlesView;

  })(Backbone.View);
  SingleArticleView = (function(_super) {
    __extends(SingleArticleView, _super);

    function SingleArticleView() {
      _ref5 = SingleArticleView.__super__.constructor.apply(this, arguments);
      return _ref5;
    }

    SingleArticleView.prototype.el = ".main-content";

    SingleArticleView.prototype.template = templates.singleArticle;

    SingleArticleView.prototype.className = "single-article";

    SingleArticleView.prototype.initialize = function(options) {
      _.bindAll(this, "render");
      return this.vent = App.vent;
    };

    SingleArticleView.prototype.render = function(shorten, empty) {
      if (empty) {
        this.$el.empty();
      }
      return this.$el.append(this.template({
        article: this.model.toJSON(),
        shorten: shorten
      }));
    };

    return SingleArticleView;

  })(Backbone.View);
  CategoryBannerView = (function(_super) {
    __extends(CategoryBannerView, _super);

    function CategoryBannerView() {
      _ref6 = CategoryBannerView.__super__.constructor.apply(this, arguments);
      return _ref6;
    }

    CategoryBannerView.prototype.el = ".category-hero";

    CategoryBannerView.prototype.template = templates.categoryBanner;

    CategoryBannerView.prototype.initialize = function(options) {
      _.bindAll(this, "render");
      this.bind("switchToCategory", this.render);
      this.category = options.category;
      this.vent = App.vent;
      return this.vent.bind("switchToCategory:" + options.category, this.render);
    };

    CategoryBannerView.prototype.render = function() {
      console.log(this.model.toJSON());
      return this.$el.html(this.template(this.model.toJSON()));
    };

    return CategoryBannerView;

  })(Backbone.View);
  App.articleModels = [];
  App.bannerModels = {};
  App.articleCollections = {};
  App.dropdownViews = {};
  App.categoryArticlesViews = {};
  App.categoryBannerViews = {};
  for (_j = 0, _len1 = articles.length; _j < _len1; _j++) {
    article = articles[_j];
    App.articleModels.push(new ArticleModel(article));
  }
  App.articleCollections.featured = new ArticlesCollection(App.articleModels.filter(function(m) {
    return m.get("featured");
  }));
  App.dropdownViews.featured = new DropdownView({
    collection: App.articleCollections.featured,
    category: "featured"
  });
  App.categoryArticlesViews.featured = new CategoryArticlesView({
    collection: App.articleCollections.featured,
    category: "featured"
  });
  for (_k = 0, _len2 = categories.length; _k < _len2; _k++) {
    category = categories[_k];
    App.articleCollections[category] = new ArticlesCollection(App.articleModels.filter(function(m) {
      return m.get("category") === category;
    }));
    App.bannerModels[category] = new BannerModel(_.findWhere(banners, {
      category: category
    }));
    App.dropdownViews[category] = new DropdownView({
      collection: App.articleCollections[category],
      category: category
    });
    App.categoryArticlesViews[category] = new CategoryArticlesView({
      collection: App.articleCollections[category],
      category: category
    });
  }
  for (_l = 0, _len3 = banners.length; _l < _len3; _l++) {
    banner = banners[_l];
    App.categoryBannerViews[banner.category] = new CategoryBannerView({
      model: new BannerModel(banner),
      category: banner.category
    });
  }
  _ref7 = Object.keys(App.dropdownViews);
  for (_m = 0, _len4 = _ref7.length; _m < _len4; _m++) {
    key = _ref7[_m];
    App.dropdownViews[key].render();
  }
  $(function() {
    var initializeRouter;
    App.router = new (Backbone.Router.extend({
      routes: {
        "": "featured",
        "article/:id": "singleArticle",
        "category/:name": "categoryPage"
      },
      singleArticle: function(id) {
        var articleModel, articleView;
        this.scrollTop();
        id = parseInt(id, 10);
        articleModel = new ArticleModel(_(App.articles).findWhere({
          uid: id
        }));
        articleView = new SingleArticleView({
          model: articleModel
        });
        articleView.render(false, true);
        this.renderBanner(articleModel.get("category"));
        this.setTab(articleModel.get("category"));
        return $("body").attr("data-page-type", "article");
      },
      categoryPage: function(name) {
        var articleCollection, articleView;
        console.log("CP started");
        articleCollection = new ArticlesCollection(_(App.articles).where({
          category: name
        }));
        articleView = new CategoryArticlesView({
          collection: articleCollection,
          category: name
        });
        articleView.render();
        this.setTab(name);
        this.renderBanner(name);
        $("body").attr("data-page-type", "category");
        return this.scrollTop();
      },
      featured: function() {
        var articleCollection, articleView, bannerModel, bannerView;
        articleCollection = new ArticlesCollection(_(App.articles).where({
          featured: true
        }));
        articleView = new CategoryArticlesView({
          collection: articleCollection,
          category: "featured"
        });
        articleView.render();
        bannerModel = new BannerModel(_(App.banners).findWhere({
          category: "featured"
        }));
        bannerView = new CategoryBannerView({
          model: bannerModel,
          category: "featured"
        });
        bannerView.render();
        this.setTab("featured");
        $("body").attr("data-page-type", "category");
        return this.scrollTop();
      },
      renderBanner: function(category) {
        var bannerModel, bannerView;
        bannerModel = new BannerModel(_(App.banners).findWhere({
          category: category
        }));
        bannerView = new CategoryBannerView({
          model: bannerModel,
          category: category
        });
        return bannerView.render();
      },
      setTab: function(name) {
        console.log(name);
        $(".nav-links li").removeClass("selected-section");
        return $(".nav-links .js-nav-" + name).addClass("selected-section");
      },
      scrollTop: function() {
        return $("body").animate({
          scrollTop: $(".category-banner").offset().top
        }, 400);
      }
    }));
    initializeRouter = function() {
      console.log("ROUTER INITIALIZED");
      Backbone.history.start({
        pushState: true
      });
      return $(document).on('click', 'a:not([data-bypass])', function(event) {
        var href, protocol;
        event.preventDefault();
        href = $(this).attr('href');
        protocol = this.protocol + '//';
        return App.router.navigate(href, true);
      });
    };
    return initializeRouter();
  });
  /*  
  $( "body" ).on "click", "[data-category]", ( event ) ->
    event.preventDefault()
  
    category = $(this).data("category")
  
    $( ".nav-links > .selected-section" ).removeClass("selected-section")
    $( ".nav-links > li > a[data-category=#{ category }]" ).parent( "li" ).addClass( "selected-section" )
  
    App.categoryBannerViews[category].trigger( "switchToCategory" )
    App.categoryArticlesViews[category].trigger( "switchToCategory" )
  */

  return $.getJSON("http://baconipsum.com/api/?type=meat-and-filler&paras=10", function(data) {
    var model, text, _len5, _n, _ref8;
    text = "<p>" + (data.slice(0, 3).join(" ")) + "</p>\n<h3>" + (_.capitalize(data[3].slice(0, 5))) + "</h3>\n<p>" + (data.slice(4, 7).join(" ")) + "</p>\n<h3>" + (_.capitalize(data[8].slice(0, 5))) + "</h3>\n<p>" + (data.slice(9, 10).join(" ")) + "</p>";
    text.split("  ").join(" ");
    _ref8 = App.articles;
    for (_n = 0, _len5 = _ref8.length; _n < _len5; _n++) {
      model = _ref8[_n];
      model.content = text;
    }
    console.log("Ready.");
    return console.log("another thing");
  });
});
